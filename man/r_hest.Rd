% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_hest.R
\name{r_hest}
\alias{r_hest}
\alias{r_hest2}
\title{Simulate Centralized Conditional Returns of Heston SV}
\usage{
r_hest(n, moms)

r_hest2(n, moms)
}
\arguments{
\item{n}{number of return samples to simulate}

\item{moms}{vector of the first six|eight|ten conditional moments of the
centralized return}
}
\value{
vector of centralized conditional return samples,
\eqn{\overline{y}_t|v_0}.
}
\description{
Simulate centralized conditional return samples of the Heston SV model from
approximated Pearson Distribution which matches the first six|eight|ten
moments of the unknown true return distribution.
}
\details{
The Heston SV model is described by the following SDEs:
\deqn{
  d\log s(t) = (\mu - v(t)/2)dt + \sqrt{v(t)}dw^s(t),
}
\deqn{
  dv(t) = k(\theta - v(t))dt + \sigma_v\sqrt{v(t)}dw^v(t),
}
where the correlation between \eqn{w^s(t)} and \eqn{w^v(t)} is equal to
\eqn{\rho}, i.e., \eqn{cov(w^s(t), w^v(t)) = \rho t}.
The (conditional, with \eqn{v_0} given) return over period \eqn{[0,t]}
is defined as \eqn{y_t \equiv \log s(t) - \log s(0)}
which is decomposed as
\deqn{
  y_t = (\mu - \theta/2)t - \beta_t (v_0 -\theta) + \overline{y}_t|v_0,
}
where \eqn{\beta_t = (1-e^{-kt})/(2k)} and the centralized conditional
return
\deqn{
  \overline{y}_t|v_0 = \frac{\sigma_v}{2k}e^{-kt}I\!E_t +
  \left(\rho - \frac{\sigma_v}{2k}\right)I_t +
  \sqrt{1-\rho^2}I_t^{*}.
}
Given the initial variance \eqn{v_0}, the function generate samples of
the centralized conditional return \eqn{\overline{y}_t|v_0}.
}
\examples{
v0 = 0.010201; k = 6.21; theta = 0.019; sigma = 0.61; rho = -0.7
r = 0.0319; tau = 1
par = list(v0=v0, k=k, theta=theta, sigma=sigma, rho=rho, h=tau)
moms8 = rep(0, 8) # centralized variable whose first moment = 0
for (i in 2:8) {moms8[i] = eval_mom_hest(fmu.hest[[i]], par)}

n = 100
Y = r_hest(n, moms8)

# n = 2560000
n = 10000
time.start = proc.time()
Y = r_hest2(n, moms8)
time.end   = proc.time()
time.taken = time.end - time.start
time.taken

# moms6 = c(0.0231, 0.0191, -0.0021, 0.0020, -0.0010, 0.0008)
}
